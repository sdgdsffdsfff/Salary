<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">

<beans>

	<bean id="dataSourceCrm" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver" />
		<property name="jdbcUrl" value="jdbc:oracle:thin:@192.168.0.242:1521:CRM" />
		<property name="user" value="CRMZS" />
		<property name="password" value="GZHTXXCRM" />
		
		<!-- 连接池中保留的最小连接数 -->
		<property name="minPoolSize" value="20" />
		
		<!-- 连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="100" />
		
		<!-- 初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="20" />
		
		<!-- 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="5" />
		
		<!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="5" />
		
		<!-- JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements    
		  属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。    
		  如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
		<property name="maxStatements" value="0" />
		<property name="maxStatementsPerConnection" value="0" />
		
		<!-- 每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="30" />
		
		<!-- 定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="30" />
		
		<!-- 获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效    
		  保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试    
		  获取连接失败后该数据源将申明已断开并永久关闭。Default: false -->
		<property name="breakAfterAcquireFailure" value="true" />
		
	</bean>

	<bean id="sessionFactoryCrm" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource"><ref local="dataSourceCrm"/></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<bean id="crmDaoImpl" class="com.salary.sync.crm.CRMDaoImpl">
		<property name="sessionFactory" ref="sessionFactoryCrm" />
	</bean>
	
</beans>
